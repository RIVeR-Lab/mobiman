<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from jackal_fixedWheel_ur5.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="mobiman">
  <material name="erwhi_black">
    <color rgba="0.15 0.15 0.15 1.0"/>
  </material>
  <material name="erwhi_blue">
    <color rgba="0.1 0.40 1 1.0"/>
  </material>
  <material name="erwhi_light_grey">
    <color rgba="0.3 0.3 0.3 1.0"/>
  </material>
  <material name="erwhi_aluminum">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="erwhi_purple">
    <color rgba="0.749 0 1 1"/>
  </material>
  <material name="erwhi_footprint">
    <color rgba="1 0 0 0"/>
  </material>
  <material name="erwhi_pcb">
    <color rgba="0 0.51 0.25 1.0"/>
  </material>
  <material name="erwhi_orange">
    <color rgba="1.0 0.5 0 1.0"/>
  </material>
  <material name="erwhi_brass">
    <color rgba="0.6 0.5 0.3 1.0"/>
  </material>
  <material name="erwhi_white">
    <color rgba="0.9 0.9 0.9 1.0"/>
  </material>
  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="light_grey">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  <material name="yellow">
    <color rgba="0.8 0.8 0.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.15 0.15 0.15 1.0"/>
  </material>
  <link name="front_left_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_left_wheel" type="fixed">
    <parent link="chassis_link"/>
    <child link="front_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.131 0.19 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="front_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="front_right_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="front_right_wheel" type="fixed">
    <parent link="chassis_link"/>
    <child link="front_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="0.131 -0.19 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="front_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="front_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="front_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_left_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_left_wheel" type="fixed">
    <parent link="chassis_link"/>
    <child link="rear_left_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.131 0.19 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="rear_left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_left_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_left_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="rear_right_wheel_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-wheel.stl"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.04" radius="0.098"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.477"/>
      <inertia ixx="0.0013" ixy="0" ixz="0" iyy="0.0024" iyz="0" izz="0.0013"/>
    </inertial>
  </link>
  <gazebo reference="rear_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <selfCollide>false</selfCollide>
    <mu1 value="0.5"/>
    <mu2 value="0.5"/>
    <kp value="10000000.0"/>
    <kd value="1"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <joint name="rear_right_wheel" type="fixed">
    <parent link="chassis_link"/>
    <child link="rear_right_wheel_link"/>
    <origin rpy="0 0 0" xyz="-0.131 -0.19 0.0345"/>
    <axis xyz="0 1 0"/>
  </joint>
  <!-- In reality, Jackal has only two motors, one per side. However, it's more
         straightforward for Gazebo to simulate as if there's an actuator per wheel. -->
  <transmission name="rear_right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="rear_right_wheel">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_right_actuator">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="base_link"/>
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="chassis_link"/>
  </joint>
  <link name="chassis_link">
    <visual>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 -0.0655"/>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-base.stl"/>
      </geometry>
      <material name="dark_grey"/>
    </visual>
    <collision>
      <origin xyz="0 0 0.092"/>
      <geometry>
        <box size="0.42 0.31 0.184"/>
      </geometry>
    </collision>
    <inertial>
      <!-- Center of mass -->
      <origin rpy="0 0 0" xyz="0.012  0.002 0.067"/>
      <mass value="16.523"/>
      <!-- Moments of inertia: ( chassis without wheels ) -->
      <inertia ixx="0.3136" ixy="-0.0008" ixz="0.0164" iyy="0.3922" iyz="-0.0009" izz="0.4485"/>
    </inertial>
  </link>
  <link name="front_fender_link">
    <visual>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-fender.stl"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <collision>
      <!--origin xyz="0 0 0" rpy="0 0 0"/-->
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-fender.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="front_fender_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="chassis_link"/>
    <child link="front_fender_link"/>
  </joint>
  <link name="rear_fender_link">
    <visual>
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-fender.stl"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <collision>
      <!--origin xyz="0 0 0" rpy="0 0 0"/-->
      <geometry>
        <mesh filename="package://jackal_description/meshes/jackal-fender.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="rear_fender_joint" type="fixed">
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
    <parent link="chassis_link"/>
    <child link="rear_fender_link"/>
  </joint>
  <!-- TODO: Make this internal_imu_link or something, and use a mixed-in xacro
       to supply the joint between it and imu_link. This is important so that imu_link
       always points to the "active" IMU. When an upgrade IMU is connected, the
       internal_imu_link should remain, but imu_link should point to the upgrade one. -->
  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-09" ixy="0.0" ixz="0.0" iyy="1e-09" iyz="0.0" izz="1e-09"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="imu_link"/>
  </joint>
  <!-- TODO: Same note as applies to imu_link -->
  <link name="navsat_link">
    <visual>
      <geometry>
        <cylinder length="0.016" radius="0.026"/>
      </geometry>
      <origin xyz="0 0 0.008"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.016" radius="0.026"/>
      </geometry>
      <origin xyz="0 0 0.008"/>
    </collision>
  </link>
  <joint name="navsat_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="navsat_link"/>
    <origin xyz="-0.180 0.126 0.1815"/>
  </joint>
  <link name="mid_mount"/>
  <joint name="mid_mount_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="mid_mount"/>
    <origin xyz="0 0 0.184"/>
  </joint>
  <link name="rear_mount"/>
  <joint name="rear_mount_joint" type="fixed">
    <parent link="mid_mount"/>
    <child link="rear_mount"/>
    <origin xyz="-0.12 0 0"/>
  </joint>
  <link name="front_mount"/>
  <joint name="front_mount_joint" type="fixed">
    <parent link="mid_mount"/>
    <child link="front_mount"/>
    <origin xyz="0.12 0 0"/>
  </joint>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_controller">
      <robotNamespace>/</robotNamespace>
      <updateRate>50.0</updateRate>
      <bodyName>imu_link</bodyName>
      <topicName>imu/data</topicName>
      <accelDrift>0.005 0.005 0.005</accelDrift>
      <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
      <rateDrift>0.005 0.005 0.005 </rateDrift>
      <rateGaussianNoise>0.005 0.005 0.005 </rateGaussianNoise>
      <headingDrift>0.005</headingDrift>
      <headingGaussianNoise>0.005</headingGaussianNoise>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps_controller">
      <updateRate>40</updateRate>
      <robotNamespace>/</robotNamespace>
      <bodyName>navsat_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>/navsat/fix</topicName>
      <velocityTopicName>/navsat/vel</velocityTopicName>
      <referenceLatitude>49.9</referenceLatitude>
      <referenceLongitude>8.9</referenceLongitude>
      <referenceHeading>0</referenceHeading>
      <referenceAltitude>0</referenceAltitude>
      <drift>0.0001 0.0001 0.0001</drift>
    </plugin>
  </gazebo>
  <gazebo reference="base_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="chassis_link">
    <material>Gazebo/DarkGrey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="imu_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="navsat_link">
    <material>Gazebo/DarkGrey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="front_fender_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="rear_fender_link">
    <material>Gazebo/Yellow</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!--
    As you add to this URDF, please be aware that both the robot and
    simulation include it. You must retain compatibility with all of
    the following launch files:

    jackal_viz/launch/view_model.launch
    jackal_gazebo/launch/jackal_world.launch
    jackal_base/launch/base.launch
  -->
  <!-- 
    Add Cameras. 
    - JACKAL_FLEA3
    - JACKAL_STEREO_FLEA3
    - JACKAL_BB2
  -->
  <!-- Optional custom includes. -->
  <!--xacro:include filename="$(optenv JACKAL_URDF_EXTRAS empty.urdf)" /-->
  <!-- Optional for Clearpath internal softwares -->
  <!--xacro:include filename="$(optenv CPR_URDF_EXTRAS empty.urdf)" /-->
  <!--
    Base UR robot series xacro macro.

    NOTE: this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note: that .xacro must still be processed by the xacro command).

    For use in '.launch' files: use one of the 'load_urX.launch' convenience
    launch files.

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE: the default kinematic parameters (ie: link lengths, frame locations,
    offets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (ie: robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targetted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs: Ludovic Delval.

    Contributors to previous versions (in no particular order):

     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
  <!--
    NOTE: the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->
  <transmission name="ur5_shoulder_pan_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur5_shoulder_pan_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur5_shoulder_pan_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur5_shoulder_lift_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur5_shoulder_lift_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur5_shoulder_lift_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur5_elbow_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur5_elbow_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur5_elbow_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur5_wrist_1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur5_wrist_1_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur5_wrist_1_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur5_wrist_2_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur5_wrist_2_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur5_wrist_2_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="ur5_wrist_3_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="ur5_wrist_3_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="ur5_wrist_3_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <!-- links: main serial chain -->
  <link name="ur5_base_link"/>
  <link name="ur5_base_link_inertia">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/visual/base.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/collision/base.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4.0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00443333156" ixy="0.0" ixz="0.0" iyy="0.00443333156" iyz="0.0" izz="0.0072"/>
    </inertial>
  </link>
  <link name="ur5_shoulder_link">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/visual/shoulder.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/collision/shoulder.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="3.7"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.014972352344389999" ixy="0.0" ixz="0.0" iyy="0.014972352344389999" iyz="0.0" izz="0.01040625"/>
    </inertial>
  </link>
  <link name="ur5_upper_arm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.13585"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/visual/upperarm.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.13585"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/collision/upperarm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="8.393"/>
      <origin rpy="0 1.5707963267948966 0" xyz="-0.2125 0.0 0.136"/>
      <inertia ixx="0.1338857818623325" ixy="0.0" ixz="0.0" iyy="0.1338857818623325" iyz="0.0" izz="0.0151074"/>
    </inertial>
  </link>
  <link name="ur5_forearm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0165"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/visual/forearm.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0165"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/collision/forearm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.275"/>
      <origin rpy="0 1.5707963267948966 0" xyz="-0.196125 0.0 0.0165"/>
      <inertia ixx="0.03121679102890359" ixy="0.0" ixz="0.0" iyy="0.03121679102890359" iyz="0.0" izz="0.004095"/>
    </inertial>
  </link>
  <link name="ur5_wrist_1_link">
    <visual>
      <!-- TODO: Move this to a parameter -->
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.093"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/visual/wrist1.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.093"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/collision/wrist1.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.219"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0020138887777775" ixy="0.0" ixz="0.0" iyy="0.0020138887777775" iyz="0.0" izz="0.0021942"/>
    </inertial>
  </link>
  <link name="ur5_wrist_2_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.095"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/visual/wrist2.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.095"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/collision/wrist2.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.219"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0018310388509175" ixy="0.0" ixz="0.0" iyy="0.0018310388509175" iyz="0.0" izz="0.0021942"/>
    </inertial>
  </link>
  <link name="ur5_wrist_3_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0818"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/visual/wrist3.dae"/>
      </geometry>
      <material name="LightGrey">
        <color rgba="0.7 0.7 0.7 1.0"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.0818"/>
      <geometry>
        <mesh filename="package://ur_description/meshes/ur5/collision/wrist3.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1879"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 -0.01525"/>
      <inertia ixx="8.062472608343e-05" ixy="0.0" ixz="0.0" iyy="8.062472608343e-05" iyz="0.0" izz="0.0001321171875"/>
    </inertial>
  </link>
  <!-- joints: main serial chain -->
  <joint name="ur5_base_link-base_link_inertia" type="fixed">
    <parent link="ur5_base_link"/>
    <child link="ur5_base_link_inertia"/>
    <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
  </joint>
  <joint name="ur5_shoulder_pan_joint" type="revolute">
    <parent link="ur5_base_link_inertia"/>
    <child link="ur5_shoulder_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.089159"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur5_shoulder_lift_joint" type="revolute">
    <parent link="ur5_shoulder_link"/>
    <child link="ur5_upper_arm_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur5_elbow_joint" type="revolute">
    <parent link="ur5_upper_arm_link"/>
    <child link="ur5_forearm_link"/>
    <origin rpy="0 0 0" xyz="-0.425 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-3.141592653589793" upper="3.141592653589793" velocity="3.141592653589793"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur5_wrist_1_joint" type="revolute">
    <parent link="ur5_forearm_link"/>
    <child link="ur5_wrist_1_link"/>
    <origin rpy="0 0 0" xyz="-0.39225 0 0.10915"/>
    <axis xyz="0 0 1"/>
    <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur5_wrist_2_joint" type="revolute">
    <parent link="ur5_wrist_1_link"/>
    <child link="ur5_wrist_2_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 -0.09465 -1.941303950897609e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="ur5_wrist_3_joint" type="revolute">
    <parent link="ur5_wrist_2_link"/>
    <child link="ur5_wrist_3_link"/>
    <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.0823 -1.688001216681175e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="28.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <!-- ROS-Industrial 'base' frame: base_link to UR 'Base' Coordinates transform -->
  <link name="ur5_base"/>
  <joint name="ur5_base_link-base_fixed_joint" type="fixed">
    <!-- Note the rotation over Z of pi radians: as base_link is REP-103
           aligned (ie: has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
    <parent link="ur5_base_link"/>
    <child link="ur5_base"/>
  </joint>
  <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
  <link name="ur5_flange"/>
  <joint name="ur5_wrist_3-flange" type="fixed">
    <parent link="ur5_wrist_3_link"/>
    <child link="ur5_flange"/>
    <origin rpy="0 -1.5707963267948966 -1.5707963267948966" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
  <link name="ur5_tool0"/>
  <joint name="ur5_flange-tool0" type="fixed">
    <!-- default toolframe: X+ left, Y+ up, Z+ front -->
    <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0"/>
    <parent link="ur5_flange"/>
    <child link="ur5_tool0"/>
  </joint>
  <!-- Import lidar-->
  <!--xacro:include filename="$(find lms1xx)/urdf/sick_lms1xx_mount.urdf.xacro" /-->
  <!-- Attach robotic arm to the mobile base -->
  <joint name="ur5_to_jackal" type="fixed">
    <parent link="base_link"/>
    <child link="ur5_base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.2"/>
  </joint>
  <!-- Create lidar instance -->
  <!--xacro:sick_lms1xx_mount prefix="jackal"
        parent_link="base_link"
        topic="jackal/scan"
        min_range="0.2"
        max_range="4.0">
        <origin xyz="0 0 0.18" rpy="0 0 0" />
    </xacro:sick_lms1xx_mount-->
  <!-- Create camera instance -->
  <!--xacro:realsense-rs200 
        prefix="rs200_cam1" 
        parent="top_plate_front_link">
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />   
    </xacro:realsense-rs200-->
  <!-- Create camera instance -1.570796327 -->
  <!--xacro:realsense-rs200 
        prefix="rs200_cam2" 
        parent="${arm_prefix}ee_link">
        <origin xyz="0.0 0.0 -0.05" rpy="0.0 0.0 0.0" />   
    </xacro:realsense-rs200-->
  <joint name="d435_cam1camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="d435_cam1camera_bottom_screw_frame"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.2 0.0 0.2"/>
    <!--origin rpy="0.0 0.0 0" xyz="${offset_x} ${offset_y} ${offset_z}"/-->
  </joint>
  <link name="d435_cam1camera_bottom_screw_frame"/>
  <gazebo reference="d435_cam1camera_bottom_screw_frame">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="d435_cam1camera_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0175 0.0125"/>
    <parent link="d435_cam1camera_bottom_screw_frame"/>
    <child link="d435_cam1camera_link"/>
  </joint>
  <link name="d435_cam1camera_link">
    <visual>
      <origin rpy="1.570796327 0 1.570796327" xyz="0.0149 -0.0175 0"/>
      <geometry>
        <mesh filename="package://mobiman_simulation/meshes/d435.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="erwhi_aluminum"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.180"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257"/>
    </inertial>
  </link>
  <gazebo reference="d435_cam1camera_link">
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- camera depth joints and links -->
  <joint name="d435_cam1camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="d435_cam1camera_link"/>
    <child link="d435_cam1camera_depth_frame"/>
  </joint>
  <link name="d435_cam1camera_depth_frame"/>
  <gazebo reference="d435_cam1camera_depth_frame">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="d435_cam1camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.570796327 0 -1.570796327" xyz="0 0 0"/>
    <parent link="d435_cam1camera_depth_frame"/>
    <child link="d435_cam1camera_depth_optical_frame"/>
  </joint>
  <link name="d435_cam1camera_depth_optical_frame"/>
  <gazebo reference="d435_cam1camera_depth_optical_frame">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!-- camera left IR joints and links -->
  <joint name="d435_cam1camera_left_ir_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="d435_cam1camera_depth_frame"/>
    <child link="d435_cam1camera_left_ir_frame"/>
  </joint>
  <link name="d435_cam1camera_left_ir_frame"/>
  <gazebo reference="d435_cam1camera_left_ir_frame">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="d435_cam1camera_left_ir_optical_joint" type="fixed">
    <origin rpy="-1.570796327 0 -1.570796327" xyz="0 0 0"/>
    <parent link="d435_cam1camera_left_ir_frame"/>
    <child link="d435_cam1camera_left_ir_optical_frame"/>
  </joint>
  <link name="d435_cam1camera_left_ir_optical_frame"/>
  <gazebo reference="d435_cam1camera_left_ir_optical_frame">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!-- camera right IR joints and links -->
  <joint name="d435_cam1camera_right_ir_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.05 0"/>
    <parent link="d435_cam1camera_depth_frame"/>
    <child link="d435_cam1camera_right_ir_frame"/>
  </joint>
  <link name="d435_cam1camera_right_ir_frame"/>
  <gazebo reference="d435_cam1camera_right_ir_frame">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="d435_cam1camera_right_ir_optical_joint" type="fixed">
    <origin rpy="-1.570796327 0 -1.570796327" xyz="0 0 0"/>
    <parent link="d435_cam1camera_right_ir_frame"/>
    <child link="d435_cam1camera_right_ir_optical_frame"/>
  </joint>
  <link name="d435_cam1camera_right_ir_optical_frame"/>
  <gazebo reference="d435_cam1camera_right_ir_optical_frame">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <!-- camera color joints and links -->
  <joint name="d435_cam1camera_color_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.015 0"/>
    <parent link="d435_cam1camera_depth_frame"/>
    <child link="d435_cam1camera_color_frame"/>
  </joint>
  <link name="d435_cam1camera_color_frame"/>
  <gazebo reference="d435_cam1camera_color_frame">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="d435_cam1camera_color_optical_joint" type="fixed">
    <origin rpy="-1.570796327 0 -1.570796327" xyz="0 0 0"/>
    <parent link="d435_cam1camera_color_frame"/>
    <child link="d435_cam1camera_color_optical_frame"/>
  </joint>
  <link name="d435_cam1camera_color_optical_frame"/>
  <gazebo reference="d435_cam1camera_color_optical_frame">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <link name="d435_cam1camera_depth_frame_gazebo"/>
  <joint name="d435_cam1gazebo_joint" type="fixed">
    <origin rpy="-1.570796327 0 -1.570796327" xyz="0 0 0"/>
    <parent link="d435_cam1camera_link"/>
    <child link="d435_cam1camera_depth_frame_gazebo"/>
  </joint>
  <gazebo reference="camera_depth_frame_gazebo">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <gazebo reference="d435_cam1camera_link">
    <sensor name="d435_cam1d435" type="depth">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.59174</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>6</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin">
        <visualize>true</visualize>
        <baseline>0.05</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>d435_cam1d435</cameraName>
        <imageTopicName>/d435_cam1d435/camera/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/d435_cam1d435/camera/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/d435_cam1d435/camera/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/d435_cam1d435/camera/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/d435_cam1d435/camera/depth/color/points</pointCloudTopicName>
        <frameName>d435_cam1camera_depth_frame_gazebo</frameName>
        <pointCloudCutoff>0.02</pointCloudCutoff>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Create camera instance -1.570796327 -->
  <!--xacro:realsense-d435 
        prefix="d435_cam2" 
        parent="${arm_prefix}ee_link">
        <origin xyz="0.0 0.0 -0.05" rpy="0.0 0.0 0.0" />   
    </xacro:realsense-d435-->
  <!-- Create holonomic virtual links and joints -->
  <!--link name="virtual_world_link"/>

    <link name="dummy_link">
 	    <inertial>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <mass value="0.001" />
            <inertia ixx="7.58333333333e-07" ixy="0.0" ixz="0.0" iyy="7.58333333333e-07" iyz="0.0" izz="1.25e-06"/>
        </inertial>
        <collision>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
        </collision>
        <visual>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
        </visual>
	</link>

    <gazebo reference="dummy_link">
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
        <material>Gazebo/Black</material>
    </gazebo>

    <joint name="fixed" type="fixed">
        <parent link="virtual_world_link"/>
        <child link="dummy_link"/>
    </joint>

    <link name="x_axis_link">
 	    <inertial>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <mass value="0.001" />
            <inertia ixx="7.58333333333e-07" ixy="0.0" ixz="0.0" iyy="7.58333333333e-07" iyz="0.0" izz="1.25e-06"/>
        </inertial>
        <collision>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
        </collision>
        <visual>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
        </visual>
	</link>

    <gazebo reference="x_axis_link">
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
        <material>Gazebo/Red</material>
    </gazebo>

    <joint name="x_axis_joint" type="prismatic">
        <origin xyz="0 0 0.0" rpy="0.0 0.0 0.0"/>
        <parent link="dummy_link" />
        <child link="x_axis_link" />
        <axis xyz="1 0 0" />
        <limit effort="0.0001" lower="-20" upper="20" velocity="1" />
        <dynamics damping="0.00001" friction="1000"/>
    </joint>

    <transmission name="tran1">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="x_axis_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="motor1">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <link name="y_axis_link">
 	    <inertial>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <mass value="0.001" />
            <inertia ixx="7.58333333333e-07" ixy="0.0" ixz="0.0" iyy="7.58333333333e-07" iyz="0.0" izz="1.25e-06"/>
        </inertial>
        <collision>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
        </collision>
        <visual>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
        </visual>
	</link>

    <gazebo reference="y_axis_link">
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
        <material>Gazebo/Green</material>
    </gazebo>

    <joint name="y_axis_joint" type="prismatic">
        <origin xyz="0 0 0.0" rpy="0.0 0.0 0.0"/>
        <parent link="x_axis_link" />
        <child link="y_axis_link" />
        <axis xyz="0 1 0" />
        <limit effort="0.0001" lower="-20" upper="20" velocity="1" />
        <dynamics damping="0.00001" friction="1000"/>
    </joint>

    <transmission name="tran2">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="y_axis_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="motor2">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <link name="theta_link">
 	    <inertial>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <mass value="0.001" />
            <inertia ixx="7.58333333333e-07" ixy="0.0" ixz="0.0" iyy="7.58333333333e-07" iyz="0.0" izz="1.25e-06"/>
        </inertial>
        <collision>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
        </collision>
        <visual>
            <origin rpy="0.0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
        </visual>
	</link>

    <gazebo reference="theta_link">
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
        <material>Gazebo/Blue</material>
        <self_collide>0</self_collide>
    </gazebo>

    <joint name="theta_joint" type="continuous">
        <origin xyz="0 0 0.0" rpy="0.0 0.0 0.0"/>
        <parent link="y_axis_link" />
        <child link="theta_link" />
        <axis xyz="0 0 1" />
        <limit effort="0.001" lower="-3.14" upper="3.14" velocity="0.01" />
        <dynamics damping="0.00001" friction="1000"/>
    </joint>

    <transmission name="tran3">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="theta_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="motor3">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>

    <joint name="entity_link_joint" type="fixed">
        <parent link="theta_link"/>
        <child link="base_link"/>
        <origin xyz="0 0 0.025" rpy="0 0 0"/>
    </joint-->
</robot>
