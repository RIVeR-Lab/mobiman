<launch>
  <!--===============================CAM 1============================== -->
  <!-- See name assigned in realsense-RS200.macro.xacro -->
  <!--arg name="cam_name" default="r200" />
  <arg name="prefix1" default="rs200_cam1" /-->
  <arg name="cam_name" default="d435" />
  <arg name="prefix1" default="d435_cam1" />

  <arg name="rgb_camera_info" value="/$(arg prefix1)$(arg cam_name)/camera/color/camera_info"/>
  <arg name="rgb_img_rect" value="/$(arg prefix1)$(arg cam_name)/camera/color/image_raw"/>
  <arg name="depReg_imgraw" value="/$(arg prefix1)$(arg cam_name)/camera/depth/image_raw"/>
  <arg name="depReg_imgrect" value="/$(arg prefix1)$(arg cam_name)/camera/depth/image_rect"/>
  <arg name="out_cloud" value="/$(arg prefix1)$(arg cam_name)/camera/depth_registered/points"/>

  <node pkg="nodelet" type="nodelet" name="standalone_nodelet" args="manager" output="screen"/>

  <!-- Convert depth from mm (in uint16) to meters -->
  <node pkg="nodelet" type="nodelet" name="convert_metric" args="load depth_image_proc/convert_metric standalone_nodelet">
    <remap from="image_raw" to="$(arg depReg_imgraw)"/>
    <remap from="image" to="$(arg depReg_imgrect)"/>
  </node>

  <!-- Construct point cloud of the rgb and depth topics -->
  <node pkg="nodelet" type="nodelet" name="points_xyzrgb" args="load depth_image_proc/point_cloud_xyzrgb standalone_nodelet --no-bond">
    <remap from="rgb/camera_info" to="$(arg rgb_camera_info)" />
    <remap from="rgb/image_rect_color" to="$(arg rgb_img_rect)"/>
    <remap from="depth_registered/image_rect" to="$(arg depReg_imgrect)"/>
    <remap from="depth_registered/points" to="$(arg out_cloud)"/>
  </node>

  <!-- Convert poincloud_to_laserscan -->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" output="screen">

    <remap from="cloud_in" to="$(arg out_cloud)"/>
    <remap from="scan" to="scan_cam1"/>
    <rosparam>
      target_frame: base_link # Leave empty to output scan in the pointcloud frame
      tolerance: 1.0
      min_height: 0.00
      max_height: 3.0

      angle_min: -3.14159 # 0.52 # -30.0*M_PI/180.0
      angle_max: 3.14159 # 0.52 # 30.0*M_PI/180.0
      angle_increment: 0.005 # M_PI/360.0
      scan_time: 0.3333
      range_min: 0.45
      range_max: 8.0
      use_inf: true

      # Concurrency level, affects number of pointclouds queued for processing and number of threads used
      # 0 : Detect number of cores
      # 1 : Single threaded
      # 2->inf : Parallelism level
      concurrency_level: 2
    </rosparam>
  </node>

  <!--===============================CAM 2============================== -->
  <!-- See name assigned in realsense-RS200.macro.xacro -->
  <!--arg name="prefix2" default="rs200_cam2" /-->
  <!--arg name="prefix2" default="d435_cam2" />

  <arg name="rgb_camera_info2" value="/$(arg prefix2)$(arg cam_name)/camera/color/camera_info"/>
  <arg name="rgb_img_rect2" value="/$(arg prefix2)$(arg cam_name)/camera/color/image_raw"/>
  <arg name="depReg_imgraw2" value="/$(arg prefix2)$(arg cam_name)/camera/depth/image_raw"/>
  <arg name="depReg_imgrect2" value="/$(arg prefix2)$(arg cam_name)/camera/depth/image_rect"/>
  <arg name="out_cloud2" value="/$(arg prefix2)$(arg cam_name)/camera/depth_registered/points"/>

  <node pkg="nodelet" type="nodelet" name="standalone_nodelet2" args="manager" output="screen"/-->

  <!-- Convert depth from mm (in uint16) to meters -->
  <!--node pkg="nodelet" type="nodelet" name="convert_metric2" args="load depth_image_proc/convert_metric standalone_nodelet">
    <remap from="image_raw" to="$(arg depReg_imgraw2)"/>
    <remap from="image" to="$(arg depReg_imgrect2)"/>
  </node-->

  <!-- Construct point cloud of the rgb and depth topics -->
  <!--node pkg="nodelet" type="nodelet" name="points_xyzrgb2" args="load depth_image_proc/point_cloud_xyzrgb standalone_nodelet - -no-bond">
    <remap from="rgb/camera_info" to="$(arg rgb_camera_info2)" />
    <remap from="rgb/image_rect_color" to="$(arg rgb_img_rect2)"/>
    <remap from="depth_registered/image_rect" to="$(arg depReg_imgrect2)"/>
    <remap from="depth_registered/points" to="$(arg out_cloud2)"/>
  </node-->

  <!-- Convert poincloud_to_laserscan -->
  <!--node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan2" output="screen">

    <remap from="cloud_in" to="$(arg out_cloud2)"/>
    <remap from="scan" to="scan_cam2"/>
    <rosparam>
      target_frame: base_link # Leave empty to output scan in the pointcloud frame
      tolerance: 1.0
      min_height: 0.00
      max_height: 3.0

      angle_min: -3.14159 # 0.52 # -30.0*M_PI/180.0
      angle_max: 3.14159 # 0.52 # 30.0*M_PI/180.0
      angle_increment: 0.005 # M_PI/360.0
      scan_time: 0.3333
      range_min: 0.45
      range_max: 8.0
      use_inf: true

      # Concurrency level, affects number of pointclouds queued for processing and number of threads used
      # 0 : Detect number of cores
      # 1 : Single threaded
      # 2->inf : Parallelism level
      concurrency_level: 2
    </rosparam>
  </node-->

  <!-- run laserscan_to_pointcloud node -->
  <!--arg name="scan" default="scan" />
  <arg name="scan_cloud" default="scan_cloud" />

  <node pkg="pointcloud_to_laserscan" type="laserscan_to_pointcloud_node" name="laserscan_to_pointcloud">
    <remap from="scan_in" to="$(arg scan)"/>
    <remap from="cloud" to="$(arg scan_cloud)"/>
    <rosparam>
      target_frame: base_link # Leave disabled to output pointcloud in scan frame
      transform_tolerance: 0.01

      # Concurrency level, affects number of pointclouds queued for processing and number of threads used
      # 0 : Detect number of cores
      # 1 : Single threaded
      # 2->inf : Parallelism level
      concurrency_level: 2
    </rosparam>
  </node-->

  <!-- run concatenate_pointcloud2 node -->
  <!--arg name="cloud_topic1" default="$(arg out_cloud)" />
  <arg name="cloud_topic2" default="$(arg out_cloud2)" />
  <arg name="frame_to" default="base_link" />

  <node pkg="mobiman_simulation" type="concatenate_pointcloud2_node" name="concatenate_pointcloud2">
    <param name="cloud_topic1" type="string" value="$(arg cloud_topic1)" />
    <param name="cloud_topic2" type="string" value="$(arg cloud_topic2)" />
    <param name="frame_to" type="string" value="$(arg frame_to)" />
  </node-->

  <!--node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
        	<param name="destination_frame" value="base_link"/>
		<param name="cloud_destination_topic" value="/merged_cloud"/>
		<param name="scan_destination_topic" value="/scan_multi"/>
                <param name="laserscan_topics" value ="/scan /scan_cam2" /> <!- - LIST OF THE LASER SCAN TOPICS TO SUBSCRIBE - ->

                <param name="angle_min" value="-3.14159"/>
                <param name="angle_max" value="3.14159"/>
                <param name="angle_increment" value="0.0058"/>
                <param name="scan_time" value="0.0333333"/>
                <param name="range_min" value="-50.0"/>
                <param name="range_max" value="50.0"/>

	</node-->

</launch>
