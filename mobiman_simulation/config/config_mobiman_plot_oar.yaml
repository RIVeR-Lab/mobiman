## Parameters
### NUA TODO: For multi-data plotting. The testing oar data needs to be linked with testing log!!!
# data_folder: ""
# data_folder: "dataset/drl/abilation/re4mpc_disc_ppo_rewMG/before_reward_update"

### NUA NOTE: REWARD PLOT
#data_folder: ["dataset/drl/re4mpc/re4mpc_cont_ppo_rewMGT",
#              "dataset/drl/re4mpc/re4mpc_cont_sac_rewMGT",
#              "dataset/drl/re4mpc/re4mpc_disc_dqn_rewMGT",
#              "dataset/drl/re4mpc/re4mpc_cont_ppo_rewMG",
#              "dataset/drl/re4mpc/re4mpc_cont_sac_rewMG",
#              "dataset/drl/re4mpc/re4mpc_disc_dqn_rewMG"]

### NUA NOTE: RESULT PLOT
data_folder: ["dataset/drl/arena/re4mpc_cont_ppo_rewMGT_100k/testing_data"]
#data_folder: ["dataset/drl/arena/re4mpc_cont_ppo_rewMGT_100k/testing_data",
#              "dataset/drl/arena/re4mpc_cont_sac_rewMGT_100k/testing_data",
#              "dataset/drl/arena/re4mpc_disc_dqn_rewMGT_100k/testing_data",
#              "dataset/drl/arena/re4mpc_cont_ppo_rewMG_100k/testing_data",
#              "dataset/drl/arena/re4mpc_cont_sac_rewMG_100k/testing_data",
#              "dataset/drl/arena/re4mpc_disc_dqn_rewMG_100k/testing_data"]

#data_names: ["dataset/drl/arena/re4mpc_cont_ppo_rewMGT_100k/testing_data/oar_data_testing_re4mpc_cont_ppo_rewMGT_trained_model_100000_steps.csv"]

# data_names: ["dataset/drl/normal/re4mpc_cont_ppo_rewMGT/20240322_133717_PPO_mobiman/oar_data_testing_jackalJaco_0_re4mpc.csv"]

plot_title: "Epsiodic Rewards"
#plot_title: "re4mpc_disc_dqn_rewMG_80k"

plot_window_timestep: 20
plot_window_episode: 20

save_flag: True
save_folder: ""

plot_result_flag: True
plot_reward_flag: False
plot_action_hist_flag: False
plot_observation_hist_flag: False

### NUA TODO: Use the same histogram function to plot both training and testing data!!!
plot_test_hist_flag: False

## Actions:
# Discrete (105): mode0_target (30) + mode1_target (36) + mode2_target (36) + mode0_goal (1) + mode1_goal (1) + mode2_goal (1)
# Continuous (8): model_mode (1) + target_type (1) + target_x (1) + target_y (1) + target_z (1) + target_roll (1) + target_pitch (1) + target_yaw (1)
action_index: [1]

## Observations (25):
# 0, 1, 2: goal_wrt_robot_x, goal_wrt_robot_y, goal_wrt_robot_z
# 3, 4, 5: obj1_wrt_robot_x, obj1_wrt_robot_y, obj1_wrt_robot_z
# 6, 7, 8: obj2_wrt_robot_x, obj2_wrt_robot_y, obj2_wrt_robot_z
# 9, 10: self_col_distance1, self_col_distance2
# 11, 12: robot_base_velo_lat, robot_base_velo_ang
# 13, ..., 18: arm_state_pos_1, ..., arm_state_pos_6
# 19, ..., 25: arm_state_velo_1, ..., arm_state_velo_6
observation_index: [0]
